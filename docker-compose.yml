services:
  app:
    build:
      context: ./api
      dockerfile: Dockerfile
    ports:
      - "80:80"
    env_file:
      - .env
    depends_on:
      postgres:
        condition: service_healthy
      migrate:
        condition: service_completed_successfully
      redis:
        condition: service_healthy
    volumes:
      - ./data/app:/app/api/cmd/log

  postgres:
    image: postgres:15
    ports:
      - "${DB_PORT}:5432"
    environment:
      POSTGRES_DB: ${DB_NAME}
      POSTGRES_USER: ${DB_USER}
      POSTGRES_PASSWORD: ${DB_PASSWORD}
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -d ${DB_NAME} -U ${DB_USER} -h ${DB_HOST} -p ${DB_PORT}"]
      interval: 10s
      timeout: 5s
      retries: 5
    volumes:
      - ./data/postgres:/var/lib/postgresql/data

  migrate:
    image: migrate/migrate
    env_file:
      - .env
    command: [
      "-path", "/migrations",
      "-database", "postgresql://${DB_USER}:${DB_PASSWORD}@${DB_HOST}:${DB_PORT}/${DB_NAME}?sslmode=disable",
      "up"
    ]
    volumes:
      - ./api/migrations:/migrations
    depends_on:
      postgres:
        condition: service_healthy

  redis:
    image: redis:latest
    ports:
      - "${SESSION_PORT}:6379"
    environment:
      REDIS_PASSWORD: ${SESSION_PASSWORD}
    command: [ "redis-server", "--requirepass", "${SESSION_PASSWORD}" ]
    healthcheck:
      test: [ "CMD", "redis-cli", "-h", "localhost", "-p", "6379", "-a", "${SESSION_PASSWORD}", "ping" ]
      interval: 10s
      timeout: 5s
      retries: 5
